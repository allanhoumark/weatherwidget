{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/WeatherWidget/WeatherWidget.js","webpack:///./helpers/weatherDataHelper.js","webpack:///./pages/index.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"classnames\"","webpack:///external \"degrees-to-direction\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React from 'react';\nimport Router from 'next/router';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\n\nclass WeatherWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          city: props.city\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.updateCity = this.updateCity.bind(this);\n    }\n\n    handleSubmit () {\n        event.preventDefault();\n        Router.push({\n            pathname: '/',\n            query:{\n                city: this.state.city\n            }\n        })\n    }\n\n    updateCity (evt) {\n        this.setState({\n          city: evt.target.value\n        });\n      }\n\n    render() {\n        const widgetStyle = {\n            margin: '10px',\n            width: '300px'\n        }\n        \n        const panelStyle = classNames('panel','panel-info',{'panel-danger': !this.props.found})\n        const {temp, hum, wind, windDirection, city, found}  = this.props;\n\n        return     <div className=\"widget\" style={widgetStyle}>\n            <div className={panelStyle}>\n            {\n                found && <div className=\"panel-heading\">Weather in <b>{city}</b></div>\n            }\n            {\n                !found && <div className=\"panel-heading\">City <b>{city}</b> not found</div>\n            }\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Temperature: <b>{temp}°C</b></li>\n                <li className=\"list-group-item\">Humidity: <b>{hum}</b></li>\n                <li className=\"list-group-item\">Wind: <b>{wind} m/s fra {windDirection}</b></li>\n                <li className=\"list-group-item\">\n                    <form id=\"weatherwidget\" method=\"GET\" onSubmit={this.handleSubmit} className=\"form-inline\">\n                    <div className=\"form-group\">\n                        <input \n                            value={this.state.city}\n                            onChange={evt => this.updateCity(evt)} \n                            type=\"text\" \n                            className=\"form-control\" \n                            id=\"city\" \n                            name=\"city\" \n                            placeholder=\"City\"/>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-default\" >Search</button>\n                    </form>\n                </li>\n            </ul>\n            \n            </div>\n        </div>\n    }\n  }\n\n  WeatherWidget.propTypes = {\n      city: propTypes.string.isRequired\n  };\n\nexport default WeatherWidget","import d2d from 'degrees-to-direction';\nimport fetch from 'isomorphic-unfetch';\n\n\nexport default class weatherDataHelper{\n\n    // should come from a app config file\n    static getApiId() {\n        return '166d00e26d3ff2c6149e89feccc5c59a';\n    }\n\n    // Maybe this shoul be moved to a WeatherDataManager\n    static async fecthSubsetWeatherDataOrDefault( city ) {\n        // get data from API or default empty dataset\n        const data = await weatherDataHelper.fetchWeatherData(city);\n\n        // if the dataset is ok\n        if(data && data.cod == 200){\n            // subtract only the data needed and make sure it is in correct format\n            return weatherDataHelper.subtractData(data);\n        } else {\n            // return an empty dataset\n            return weatherDataHelper.getNotFoundDataset(city);\n        }\n    }\n\n    // Calls API and returns the result\n    static async fetchWeatherData(city) {\n        try {\n            const res = await fetch('http://api.openweathermap.org/data/2.5/weather?q='+ encodeURIComponent(city)+',dk&units=metric&appid=' + weatherDataHelper.getApiId())\n            const data = await res.json()\n            return data;\n        } catch(error){\n            console.log('Error', error);\n        }\n    }\n    \n    // get only the data we need for the widget or if city is not found return default dataset\n    static subtractData (data) {\n        \n        if(!data) return {};\n\n        return {\n            city: data.name ? data.name:'',\n            temp: (data.main && data.main.temp) ? Math.round(data.main.temp):'',\n            hum: (data.main && data.main.humidity) ? data.main.humidity:'',\n            wind: (data.wind && data.wind.speed) ? Math.round(data.wind.speed).toLocaleString('da-DK'):'',\n            windDirection: (data.wind && data.wind.deg) ? weatherDataHelper.translateDirectionToDanish(d2d(data.wind.deg)):'',\n            found: true\n        }\n    }\n\n    // default dataset, used when city is not found\n    static getNotFoundDataset (city) {\n        return {\n            city: city,\n            temp: null,\n            hum: null,\n            wind: null,\n            windDirection: '',\n            found: false\n        }\n    }\n\n\n    // translate english directions to danish\n    static translateDirectionToDanish (dir) {\n        /*\n        Not all directions are implement yet.\n        */\n        var ret = dir;\n        switch (dir) {\n            case 'N':\n                ret = 'nord';\n                break;\n            \n            case 'NW':\n                ret = 'nordvest';\n                break;\n\n            case 'W':\n                ret = 'vest';\n                break;\n\n            case 'SW':\n                ret = 'sydvest';\n                break;\n                \n            case 'S':\n                ret = 'syd';\n                break;\n            \n            case 'SE':\n                ret = 'sydøst';\n                break;\n            \n            case 'E':\n                ret = 'øst';\n                break;\n            case 'NE':\n                ret = 'nordøst';\n                break;\n            default:\n                ret = dir;\n                break;\n        }\n        return ret;\n    }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n    \n       ","import React from 'react';\nimport Head from 'next/head';\nimport WeatherWidget from '../components/WeatherWidget/WeatherWidget'\nimport weatherDataHelper from '../helpers/weatherDataHelper';\n\nconst Index = (props) => <div>\n    <Head>\n      <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossOrigin=\"anonymous\" />\n    </Head>\n    <WeatherWidget {...props}/>\n  </div>;\n\n\nIndex.getInitialProps = async ({query}) => {\n  var city = undefined;\n  // get city from uri or default\n  try {\n    city = query.city ? decodeURIComponent(query.city) : 'copenhagen';\n  } catch(error){\n    city = 'copenhagen';\n  }\n\n  // call helper for API data or default empty dataset\n  const result = await weatherDataHelper.fecthSubsetWeatherDataOrDefault(city);\n  return result;\n}\n\nexport default Index;","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"classnames\");","module.exports = require(\"degrees-to-direction\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AANA;AAOA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;;;AAEA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAlEA;AACA;AAoEA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AAEA;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAEA;;;;;;;AAEA;AACA;;AADA;AACA;AAEA;;;;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;AAGA;AACA;;;;;;AAAA;;;;;;;;AAEA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;;;;AACA;AACA;;;;;;;;;;;;;;AAGA;AACA;;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;;;AAGA;AACA;;;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAjCA;AACA;AAkCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AACA;AADA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;;;;;;;;;;;;;;;;;;;;;;;AC3BA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}